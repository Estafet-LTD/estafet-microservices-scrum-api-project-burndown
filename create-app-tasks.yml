---
- name: include the variables for this microservice      
  include_vars:
    file: microservice-vars.yml  
    
- include: postgres.yml 
- include: a-mq-vars.yml
- include: service-envs.yml  

- name: Create the microservices application from the source to image builder for db application
  shell: 'oc new-app redhat-openjdk18-openshift:1.2~{{ github }}/{{ repo }} --name={{ microservice }} -e {{ db_url_env }}=jdbc:postgresql://postgresql.{{ project }}.svc:5432/{{ microservice }} -e {{ db_user_env }}=postgres -e {{ db_db_env }}=welcome1 -e JBOSS_A_MQ_BROKER_URL=tcp://broker-amq-tcp.{{ project }}.svc:61616 -e JBOSS_A_MQ_BROKER_USER={{ broker_pod_user }} -e JBOSS_A_MQ_BROKER_PASSWORD={{ broker_pod_password }} -e {{ service_envs }}'
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift         

- name: Wait for the microservice to become available
  shell : "oc rollout status dc/{{ microservice }}"
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift   

- name: Set the readiness probe 
  shell: "oc set probe dc/{{ microservice }} --readiness --get-url=http://:8080/api --initial-delay-seconds=60"
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift

- name: Configure the resource limits for this microservice
  shell: "oc set resources dc {{ microservice }} -c={{ microservice }} --limits=cpu={{ cpu_max }},memory={{ memory_max }} --requests=cpu={{ cpu_min }},memory={{ memory_min }}"
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift
    
- name: Wait for the microservice to become available
  shell : "oc rollout status dc/{{ microservice }}"
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift             